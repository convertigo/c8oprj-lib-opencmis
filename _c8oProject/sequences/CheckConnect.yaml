accessibility: Hidden
comment: |
  '### Check if the CMIS session is still alive.
  
  Will return isConnected true/false and the session name if available.
  
  #### Output
  
  ```
  {
    "result": {
      "isConnected": true,
      "session": "Session 9b6cc4b7-5b83-43f0-a2ad-d5d1939a378b",
      "name": "",
      "id": "-default-",
      "description": "",
      "version": "1.1",
      "vendor": "Alfresco",
      "product": "Alfresco Community",
      "root": "4d92ecbb-c391-452a-92ec-bbc391852a98"
    }
  }
  ```'
↓cmis_repositoryInfo [steps.SimpleStep-1749224967386]: 
  expression: |
    'var cmis = new JavaImporter(
        org.apache.chemistry.opencmis.client.api,
        org.apache.chemistry.opencmis.client.runtime,
        org.apache.chemistry.opencmis.commons.enums,
        org.apache.chemistry.opencmis.commons,
        java.util,
        java.io
    );
    
    var error = null;
    var res = {};
    
    with (cmis) {
    	try {
    		// get CMISSession
    		var session = context.httpSession.getAttribute("CMISSession");
            if (session == null) {
    			throw new Error("Session not found. Please connect first.");
    		}
    		// check if session is still active. Will cause a CmisUnauthorizedException if not active
    		session.getRootFolder();
    
    		info = session.getRepositoryInfo();
    	    
    	    res = {
    			"isConnected": true,
    			"session": session,
    			"name": info.getName(),
    			"id": info.getId(),
    			"description": info.getDescription(),
    			"version": info.getCmisVersionSupported(),
    			"vendor": info.getVendorName(),
    			"product": info.getProductName(),
    			"root": info.getRootFolderId()
    		}
    	} catch (e) {
    		context.httpSession.removeAttribute("CMISSession");
    		// Handle exceptions
    		error = e.message;
    		if (e.cause) {
    			log.error("Cause: " + e.cause.message);
    		}
    	}
    }'
↓jIf [steps.IfStep-1749227120675]: 
  condition: error != null
  ↓compute_res__object [steps.SimpleStep-1749228205881]: 
    expression: |
      'var res = {
      	"isConnected": false,
      	"reason": error
      	}'
↓object [steps.JsonToXmlStep-1749227201079]: 
  jsonObject: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: JS
        - →→: res
  key: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: PLAIN
        - →→: result